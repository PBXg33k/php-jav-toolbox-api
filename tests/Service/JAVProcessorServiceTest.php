<?php
namespace App\Tests\Service;

use App\Model\JAVFile;
use App\Model\JAVTitle;
use App\Service\JAVProcessorService;
use PHPUnit\Framework\TestCase;
use Psr\Log\LoggerInterface;
use Symfony\Component\EventDispatcher\EventDispatcherInterface;

class JAVProcessorServiceTest extends TestCase
{
    protected $logger;

    protected $dispatcher;

    protected $service;

    public function setUp()
    {
        $logger = $this->logger = $this->getMockBuilder(LoggerInterface::class)
            ->getMock();

        $dispatcher = $this->dispatcher = $this->getMockBuilder(EventDispatcherInterface::class)
            ->getMock();

        $this->service = new JAVProcessorService($logger, $dispatcher);

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     */
    public function extractsIDFromFilename()
    {
        $successObj = new JAVTitle();
        $filenameVariations = [
            "[ABC-123].mp4",
            "ABC-123.mp4",
            "A fancy title with ID worked in title ABC-123.wmv",
            "ABC-123 kek.mp4",
            "0302abc-123-h264.mp4",
            "[NoDRM]-abc123.mkv",
            "[Thz.la]abc-123.wmv"
        ];

        $successObj
            ->setLabel("ABC")
            ->setRelease("123");

        foreach($filenameVariations as $filenameVariation) {
            $file = (new JAVFile())->setFilename($filenameVariation);
            $successObj->addFile($file);
//            $successObj->getFiles()->first()->setFilename($filenameVariation);

            $processedFilenameResult = JAVProcessorService::extractIDFromFilename($successObj->getFiles()->first()->getFilename());

            $this->assertSame($successObj->getRelease(), $processedFilenameResult->getRelease());
            $this->assertSame($successObj->getLabel(), $processedFilenameResult->getLabel());
            $this->assertSame(
                $successObj->getFiles()->first()->getFilename(),
                $processedFilenameResult->getFiles()->first()->getFilename());
        }

    }
}
